"""The template for future perturbation versions.
Update this docstring with information about the version"""
import numpy as np
import pandas as pd
from typing import Any, Dict

from SrfGen.source_parameter_generation.uncertainties.common import verify_params
from SrfGen.source_parameter_generation.uncertainties.mag_scaling import mw_2_a_scaling_relation, MagnitudeScalingRelations, mag2mom
from SrfGen.source_parameter_generation.uncertainties.distributions import truncated_normal


# Each file must have a unique string for a version. Duplicate versions will result in an error when run.
VERSION = "1.0"


def generate_source_params(sources_line: pd.Series) -> Dict[str, Any]:
    """sources_line should have the following parameters available via . notation:
      - sources_line.pid: name of the event
      - sources_line.lat: latitude
      - sources_line.lon: longitude
      - sources_line.depth: depth
      - sources_line.mag: magnitude
      - sources_line.strike
      - sources_line.dip
      - sources_line.rake
    """

    ### Start of custom code area
    area = mw_2_a_scaling_relation(sources_line.mag, MagnitudeScalingRelations.LEONARD2014.value, sources_line.strike)
    width = np.min(np.sqrt(area), 5)
    length = area/width

    params = {
        "name": sources_line.pid,
        "latitude": sources_line.lat,
        "longitude": sources_line.lon,
        "depth": sources_line.depth,
        "magnitude": sources_line.mag,
        "moment": mag2mom(sources_line.mag),
        "strike": sources_line.strike,
        "dip": sources_line.dip,
        "rake": sources_line.rake,
        "sdrop": truncated_normal(50, 0.01),  # Example of how to add a parameter
        "width": width,
        "length": length,
    }

    ### End of custom code area

    verify_params(params)
    return params